---
- name: Running Ansible integration tests
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    metal_api_url: http://api.0.0.0.0.xip.io:8080/metal
    setup_yaml:
      - url: https://raw.githubusercontent.com/metal-stack/releases/{{ metal_stack_release_version }}/release.yaml
        meta_var: metal_stack_release
  roles:
    - ansible-common
    - metal-roles
    - metal-ansible-modules
  tasks:
    - name: Gather releases
      setup_yaml:

    - name: Install metal-python
      pip:
        name: metal_python
        version: "{{ metal_api_image_tag }}"

    - name: Allocate network
      metal_network:
        api_url: "{{ metal_api_url }}"
        api_hmac: "{{ metal_api_admin_key }}"
        name: test
        description: test network
        partition: vagrant
        project: 00000000-0000-0000-0000-000000000000
      register: network

    - name: Lookup project network
      set_fact:
        project_networks: "{{ lookup('metal', 'search', 'network', api_hmac=metal_api_admin_key, projectid='00000000-0000-0000-0000-000000000000') }}"

    - name: Assert network
      assert:
        fail_msg: "network was not created properly"
        quiet: yes
        that:
          - project_networks | length == 1
          - project_networks[0].name == "test"
          - project_networks[0].description == "test network"
          - project_networks[0].partitionid == "vagrant"
          - project_networks[0].parentnetworkid == "tenant-super-network-vagrant"
          - project_networks[0].projectid == "00000000-0000-0000-0000-000000000000"
          - project_networks[0].nat == False
          - project_networks[0].underlay == False
          - project_networks[0].privatesuper == False
          - project_networks[0].vrf > 0

    - name: Allocate IP
      metal_ip:
        api_url: "{{ metal_api_url }}"
        api_hmac: "{{ metal_api_admin_key }}"
        network: internet-vagrant-lab
        name: machine-ip
        description: machine ip
        project: 00000000-0000-0000-0000-000000000000
      register: ip

    - name: Lookup IP
      set_fact:
        looked_up_ip: "{{ lookup('metal', 'get', 'ip', api_hmac=metal_api_admin_key, id=ip.ip) }}"

    - name: Assert IP
      assert:
        fail_msg: "ip was not created properly"
        quiet: yes
        that:
          - looked_up_ip.name == "machine-ip"
          - looked_up_ip.description == "machine ip"
          - looked_up_ip.ipaddress == ip.ip
          - looked_up_ip.networkid == "internet-vagrant-lab"
          - looked_up_ip.projectid == "00000000-0000-0000-0000-000000000000"
          - looked_up_ip.type == "ephemeral"

    - name: Release IP
      metal_ip:
        api_url: "{{ metal_api_url }}"
        api_hmac: "{{ metal_api_admin_key }}"
        ip: "{{ ip.ip }}"
        state: absent

    - name: Allocate firewall
      metal_firewall:
        api_url: "{{ metal_api_url }}"
        api_hmac: "{{ metal_api_admin_key }}"
        name: "firewall01"
        description: "firewall 01"
        hostname: "firewall01"
        project: "00000000-0000-0000-0000-000000000000"
        partition: vagrant
        image: firewall-ubuntu-2.0
        size: v1-small-x86
        networks:
          - internet-vagrant-lab
          - "{{ network.id }}"

    - name: Allocate machine
      metal_machine:
        api_url: "{{ metal_api_url }}"
        api_hmac: "{{ metal_api_admin_key }}"
        name: "machine01"
        description: "machine 01"
        hostname: "machine01"
        project: "00000000-0000-0000-0000-000000000000"
        partition: vagrant
        image: ubuntu-20.04
        size: v1-small-x86
        networks:
          - internet-vagrant-lab
          - "{{ network.id }}"

    # Wait for machine SSH

    # - name: Release network
    #   metal_network:
    #     api_url: "{{ metal_api_url }}"
    #     api_hmac: "{{ metal_api_admin_key }}"
    #     id: "{{ network.id }}"
    #     state: absent
