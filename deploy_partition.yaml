---
- name: deploy leaves and docker
  hosts: leaf01
  roles:
    - name: metal-roles/partition/roles/leaf
      tags: leaf
    - name: metal-roles/partition/roles/docker-on-cumulus
      tags: docker-on-cumulus

- name: deploy dhcp server
  hosts: leaf01
  roles:
    - name: metal-roles/partition/roles/dhcp
      tags: dhcp

- name: configure interface
  hosts: leaf02
  ignore_errors: True
  pre_tasks:
    - name: remove initial config
      command: jq 'delpaths([["DEVICE_METADATA", "localhost", "bgp_asn"]]) | .LOOPBACK_INTERFACE = {} | .BGP_NEIGHBOR = {} | .DEVICE_METADATA.localhost.docker_routing_config_mode = "split" | .INTERFACE = {}'  /etc/sonic/config_db.json
      register: cleaned_config_db

    - name: place cleaned config db
      copy:
        content: "{{ cleaned_config_db.stdout }}"
        dest: /etc/sonic/config_db.json

    - name: reload config_db
      command: config load --yes

    - name: configure
      command: "{{ item }}"
      loop:
        - config hostname {{ metal_partition_id }}-{{ inventory_hostname }}
#        - config vrf add mgmt
        - config loopback add Loopback0
        - config interface ip add Loopback0 {{ lo }}/32
#        - config interface ip add Ethernet0 {{ metal_core_cidr }}
        - config vrf add Vrf20
        - config vlan add 1001
        - config vxlan add vtep {{ lo }}
        - config vxlan map add vtep 1001 20
        - config vrf add_vrf_vni_map Vrf20 20
        - config interface vrf bind Ethernet4 Vrf20
        - config interface vrf bind Vlan1001 Vrf20

#    - name: add members to Vlan4000
#      command: "{{ item }}"
#      loop:
#        - config vlan add 4000
#        - config interface ip add Vlan4000 {{ metal_core_cidr }}
#        - config vlan member add --untagged 4000 Ethernet0
#        - config vlan member add --untagged 4000 Ethernet4
#        - config vlan member add --untagged 4000 Ethernet8
   # TODO: Cannot configure mtu for Vlan4000
    # $ config interface mtu Vlan4000 9000
    # Invalid port Vlan4000
  roles:
    - name: frr

- name: deploy metal-core and pixiecore
  hosts: leaves
  vars:
    setup_yaml:
      - url: https://raw.githubusercontent.com/metal-stack/releases/{{ metal_stack_release_version }}/release.yaml
        meta_var: metal_stack_release
  pre_tasks:
    - name: add docker registry to hosts
      lineinfile:
        path: /etc/hosts
        regexp: '{{ item.regex }}'
        line: '{{ item.ip }} {{ item.name }}'
        owner: root
        group: root
        mode: 0644
      with_items:
        - name: 0.0.0.0.nip.io
          ip: "{{ metal_partition_mgmt_gateway }}"
          regex: "{{ '0.0.0.0.nip.io' | regex_escape() }}"
        - name: api.0.0.0.0.nip.io
          ip: "{{ metal_partition_mgmt_gateway }}"
          regex: "{{ 'api.0.0.0.0.nip.io' | regex_escape() }}"
        - name: nsqd
          ip: "{{ metal_partition_mgmt_gateway }}"
          regex: "{{ 'nsqd' | regex_escape() }}"
  roles:
    - name: ansible-common
      tags: always
#    - name: internet
#      tags: internet
    - name: metal-roles/partition/roles/metal-core
      tags: metal-core
    - name: metal-roles/partition/roles/pixiecore
      tags: pixiecore

- name: wait for switches
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    setup_yaml:
      - url: https://raw.githubusercontent.com/metal-stack/releases/{{ metal_stack_release_version }}/release.yaml
        meta_var: metal_stack_release
  roles:
    - name: ansible-common
      tags: always
    - name: metal-roles
      tags: always
    - name: metal-ansible-modules
      tags: always
    - name: metal-roles/control-plane/roles/metal-python
      tags: metal-python
  post_tasks:
    - name: Wait for switches to register
      command: echo
      changed_when: false
      retries: 60
      delay: 3
      until:
        - lookup('metal', 'search', 'switch', api_url=metal_partition_metal_api_protocol+'://'+metal_partition_metal_api_addr+':'+metal_partition_metal_api_port|string+metal_partition_metal_api_basepath, api_hmac=metal_partition_metal_api_hmac_edit_key) | length == 2
        - lookup('metal', 'search', 'switch', api_url=metal_partition_metal_api_protocol+'://'+metal_partition_metal_api_addr+':'+metal_partition_metal_api_port|string+metal_partition_metal_api_basepath, api_hmac=metal_partition_metal_api_hmac_edit_key)[0]["last_sync"] != None
        - lookup('metal', 'search', 'switch', api_url=metal_partition_metal_api_protocol+'://'+metal_partition_metal_api_addr+':'+metal_partition_metal_api_port|string+metal_partition_metal_api_basepath, api_hmac=metal_partition_metal_api_hmac_edit_key)[1]["last_sync"] != None
