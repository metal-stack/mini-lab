---
- name: pre-deployment checks
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: get vagrant version
      command: vagrant --version
      register: result

    - name: check vagrant version
      fail:
        msg: "Vagrant version of the host system ({{ lookup('file', playbook_dir + '/.vagrant_version_host_system') }}) does not match vagrant version in the deployment image ({{ result.stdout.split(' ')[1] }})"
      when:
        - result.stdout.split(' ')[1] != lookup('file', playbook_dir + '/.vagrant_version_host_system')

- name: deploy leaves and docker
  hosts: leaves
  gather_facts: true
  pre_tasks:
    - name: check if vm was rebooted after initial provisioning
      stat:
        path: /.ansible_vagrant_vm_rebooted
      register: result

    - name: reboot the switches in order to remap interfaces
      reboot:
      when: not result.stat.exists | bool

    - name: put marker file that vm was rebooted
      file:
        path: /.ansible_vagrant_vm_rebooted
        state: touch
  roles:
    - name: metal-roles/partition/roles/leaf
      tags: leaf
    - name: registry-certs
    - name: metal-roles/partition/roles/docker-on-cumulus
      tags: docker-on-cumulus

- name: deploy dhcp server
  hosts: leaf01
  roles:
    - name: metal-roles/partition/roles/dhcp
      tags: dhcp

- name: deploy metal-core and pixiecore
  hosts: leaves
  vars:
    setup_yaml:
      - url: https://raw.githubusercontent.com/metal-stack/releases/{{ metal_stack_release_version }}/release.yaml
        meta_var: metal_stack_release
  pre_tasks:
    - name: add docker registry to hosts
      lineinfile:
        path: /etc/hosts
        regexp: '{{ item.regex }}'
        line: '{{ item.ip }} {{ item.name }}'
        owner: root
        group: root
        mode: 0644
      with_items:
        - name: 0.0.0.0.xip.io
          ip: "{{ metal_partition_mgmt_gateway }}"
          regex: "{{ '0.0.0.0.xip.io' | regex_escape() }}"
        - name: api.0.0.0.0.xip.io
          ip: "{{ metal_partition_mgmt_gateway }}"
          regex: "{{ 'api.0.0.0.0.xip.io' | regex_escape() }}"
        - name: nsqd
          ip: "{{ metal_partition_mgmt_gateway }}"
          regex: "{{ 'nsqd' | regex_escape() }}"
  roles:
    - name: ansible-common
      tags: always
    - name: metal-roles/partition/roles/metal-core
      tags: metal-core
    - name: metal-roles/partition/roles/pixiecore
      tags: pixiecore
