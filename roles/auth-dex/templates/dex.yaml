---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dex
  namespace: {{ auth_dex_namespace }}
  labels:
    app.kubernetes.io/name: dex
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: dex
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dex
      annotations:
        checksum/certs: "{{ lookup('template', 'dex-config.yaml') | string | hash('sha1') }}"
    spec:
      containers:
        - name: dex
          image: ghcr.io/dexidp/dex
          args:
            - dex
            - serve
            - /dex-config/config.yaml
          volumeMounts:
            - name: configuration
              readonly: true
              mountPath: /dex-config
            - name: data
              mountPath: /data
          ports:
            - name: web
              containerPort: 5556
            - name: grpc
              containerPort: 5557
            - name: telemetry
              containerPort: 5558

      volumes:
        - name: configuration
          secret:
            secretName: dex-config
            items:
              - key: config.yaml
                path: config.yaml

  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: dex-config
  namespace: {{ auth_dex_namespace }}
  labels:
    app.kubernetes.io/part-of: dex
stringData:
  config.yaml: |
    {{ lookup('template', 'dex-config.yaml') | indent(width=4, first=false) }}
---
apiVersion: v1
kind: Service
metadata:
  name: dex
  namespace: {{ auth_dex_namespace }}
  labels:
    app.kubernetes.io/name: dex
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: dex
  ports:
    - name: web
      port: 5556
      targetPort: 5556
    - name: grpc
      port: 5557
      targetPort: 5557
    - name: telemetry
      port: 5558
      targetPort: 5558
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dex
  namespace: {{ auth_dex_namespace }}
  labels:
    app.kubernetes.io/name: dex
spec:
  ingressClassName: nginx
  rules:
    - host: {{ auth_dex_ingress_dns }}
      http:
        paths:
          - backend:
              service:
                name: dex
                port:
                  name: web
            path: /
            pathType: Prefix
