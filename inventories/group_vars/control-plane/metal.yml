---
metal_set_resource_limits: no
metal_check_api_health_endpoint: http://api.0.0.0.0.xip.io:8080/metal/v1/health

# metal_helm_chart_local_path: /helm-charts/charts/metal-control-plane

metal_api_replicas: 1
metal_api_view_key: metal-view
metal_api_edit_key: metal-edit
metal_api_admin_key: metal-admin

metal_api_nsq_tcp_address: nsqd:4150

metal_api_images:
- id: firewall-ubuntu-2.0.20210316
  name: Firewall 2 Ubuntu 20210316
  description: Firewall 2 Ubuntu 20210316
  url: https://images.metal-stack.io/metal-os/master/firewall/2.0-ubuntu/20210316/img.tar.lz4
  features:
    - firewall
- id: ubuntu-20.04.20210316
  name: Ubuntu 20.04 20210316
  description: Ubuntu 20.04 20210316
  url: https://storage.googleapis.com/images.metal-pod.io/metal-os/pull_requests/85-mep-8/ubuntu/20.04/20210427/img.tar.lz4
  features:
    - machine
- id: ubuntu-cloud-init-20.04
  name: Ubuntu 20.04 cloud-init
  description: Ubuntu 20.04 with cloud-init support
  url: http://images.metal-stack.io/metal-os/pull_requests/62-cloud-init-support/ubuntu/20.04/20201107/img.tar.lz4
  features:
    - machine

metal_api_sizes:
- id: v1-small-x86
  name: v1-small-x86
  description: The Tiny Virtual
  constraints:
  - type: cores
    min: 1
    max: 4
  - type: memory
    min: "{{ '500MB' | humanfriendly }}"
    max: "{{ '4GB' | humanfriendly }}"
  - type: storage
    min: "{{ '1GB' | humanfriendly }}"
    max: "{{ '10GB' | humanfriendly }}"

metal_api_partitions:
  - id: vagrant
    name: Vagrant Lab
    description: The vagrant lab
    bootconfig:
      kernelurl: "{{ metal_kernel_url }}"
      imageurl: "{{ metal_hammer_image_url }}"
      commandline: console=ttyS0,115200n8 ip=dhcp carrier_timeout=10
    privatenetworkprefixlength: 22

metal_api_networks:
- id: tenant-super-network-vagrant
  name: "Project Super Network"
  description: "Super network of all project networks"
  nat: false
  privatesuper: true
  underlay: false
  destinationprefixes: []
  partitionid: "vagrant"
  prefixes:
  - 10.0.0.0/16
- id: internet-vagrant-lab
  name: "Virtual Internet Network"
  description: "Virtual Internet Network for vagrant-lab"
  nat: true
  privatesuper: false
  underlay: false
  destinationprefixes:
    - 0.0.0.0/0
  partitionid: "vagrant"
  vrf: 104009
  prefixes:
  - 100.255.254.0/24
- id: underlay-vagrant-lab
  name: "Underlay Network"
  description: "Underlay Network for vagrant-lab"
  nat: false
  privatesuper: false
  underlay: true
  destinationprefixes: []
  partitionid: "vagrant"
  prefixes:
  - 10.1.0.0/24

metal_api_filesystemlayouts:
- id: default
  description: "default layout"
  constraints:
    sizes:
      - v1-small-x86
    images:
      debian: "*"
      ubuntu: "*"
  filesystems:
    - path: "/boot/efi"
      device: "/dev/sda1"
      format: "vfat"
      createoptions:
      - "-F 32"
      label: "efi"
    - path: "/"
      device: "/dev/sda2"
      format: "ext4"
      label: "root"
    - path: "/var/lib"
      device: "/dev/sda3"
      format: "ext4"
      label: "varlib"
    - path: "/tmp"
      device: "tmpfs"
      format: "tmpfs"
      mountoptions: ["defaults","noatime","nosuid","nodev","noexec","mode=1777","size=512M"]
  disks:
    - device: "/dev/sda"
      wipeonreinstall: true
      partitions:
        - number: 1
          label: "efi"
          size: 500
          gpttype: "ef00"
        - number: 2
          label: "root"
          size: 5000
          gpttype: "8300"
        - number: 3
          label: "varlib"
          size: 0 # to end of partition
          gpttype: "8300"
- id: raid
  description: "raid layout"
  constraints:
    sizes:
      - v1-small-x86
    images: {}
  filesystems:
    - path: "/boot/efi"
      device: "/dev/sda1"
      format: "vfat"
      createoptions:
        - "-F 32"
      label: "efi"
    - path: "/"
      device: "/dev/sda2"
      format: "ext4"
      label: "root"
    - path: "/var/lib"
      device: "/dev/md1"
      format: "ext4"
      label: "varlib"
    - path: "/tmp"
      device: "tmpfs"
      format: "tmpfs"
      mountoptions: ["defaults","noatime","nosuid","nodev","noexec","mode=1777","size=512M"]
  raid:
    - arrayname: "/dev/md1"
      level: 1
      devices:
        - "/dev/sda3"
        - "/dev/sda4"
      createoptions: ["--metadata", "1.0"]
  disks:
    - device: "/dev/sda"
      wipeonreinstall: true
      partitions:
        - number: 1
          label: "efi"
          size: 500
          gpttype: "ef00"
        - number: 2
          label: "root"
          size: 5000
          gpttype: "8300"
        - number: 3
          label: "raid1"
          size: 200
          gpttype: "fd00"
        - number: 4
          label: "raid2"
          size: 200
          gpttype: "fd00"
- id: lvm
  description: "lvm layout"
  constraints:
    sizes:
      - v1-small-x86
    images: {}
  filesystems:
    - path: "/boot/efi"
      device: "/dev/sda1"
      format: "vfat"
      createoptions:
        - "-F 32"
      label: "efi"
    - path: "/"
      device: "/dev/sda2"
      format: "ext4"
      label: "root"
    - path: "/var/lib"
      device: "/dev/vg00/varlib"
      format: "ext4"
      label: "varlib"
    - path: "/tmp"
      device: "tmpfs"
      format: "tmpfs"
      mountoptions: ["defaults","noatime","nosuid","nodev","noexec","mode=1777","size=512M"]
  volumegroups:
    - name: "vg00"
      devices:
        - "/dev/sda3"
        - "/dev/sda4"
  logicalvolumes:
    - name: "varlib"
      volumegroup: "vg00"
      size: 200
      lvmtype: "striped"
  disks:
    - device: "/dev/sda"
      wipeonreinstall: true
      partitions:
        - number: 1
          label: "efi"
          size: 500
          gpttype: "ef00"
        - number: 2
          label: "root"
          size: 5000
          gpttype: "8300"
        - number: 3
          label: "vg1"
          size: 200
          gpttype: "8e00"
        - number: 4
          label: "vg2"
          size: 200
          gpttype: "8e00"


metal_api_nsq_tls_enabled: false

metal_masterdata_api_tls_ca: "{{ lookup('file', 'certs/ca.pem') }}"
metal_masterdata_api_tls_cert: "{{ lookup('file', 'certs/masterdata-api/server.pem') }}"
metal_masterdata_api_tls_cert_key: "{{ lookup('file', 'certs/masterdata-api/server-key.pem') }}"
metal_masterdata_api_tls_client_cert: "{{ lookup('file', 'certs/masterdata-api/client.pem') }}"
metal_masterdata_api_tls_client_key: "{{ lookup('file', 'certs/masterdata-api/client-key.pem') }}"

# for metal-api development with kube-fwd
metal_masterdata_api_port: 8445

metal_masterdata_api_tenants:
- meta:
    id: metal-stack
    kind: Tenant
    apiversion: v1
    version: 0
  name: metal-stack
  iam_config:
  description: metal-stack tenant, which is provider

metal_masterdata_api_projects:
- meta:
    id: 00000000-0000-0000-0000-000000000001
    kind: Project
    apiversion: v1
    version: 0
  name: sample-project
  description: Sample project with static id

metal_console_replicas: 1

metal_api_grpc_certs_server_key: "{{ lookup('file', 'certs/grpc/server-key.pem') }}"
metal_api_grpc_certs_server_cert: "{{  lookup('file', 'certs/grpc/server.pem') }}"
metal_api_grpc_certs_client_key: "{{ lookup('file', 'certs/grpc/client-key.pem') }}"
metal_api_grpc_certs_client_cert: "{{  lookup('file', 'certs/grpc/client.pem') }}"
metal_api_grpc_certs_ca_cert: "{{ lookup('file', 'certs/ca.pem') }}"
