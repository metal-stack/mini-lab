---
metal_set_resource_limits: no
metal_check_api_health_endpoint: http://api.{{ metal_control_plane_ingress_dns }}:8080/metal/v1/health

# metal_helm_chart_local_path: /helm-charts/charts/metal-control-plane

metal_api_replicas: 1
metal_api_view_key: metal-view
metal_api_edit_key: metal-edit
metal_api_admin_key: metal-admin

metal_api_nsq_tcp_address: nsqd:4150

metal_api_images:
- id: firewall-ubuntu-3.0
  name: Firewall 3 Ubuntu
  description: Firewall 3 Ubuntu Latest Release
  url: https://images.metal-stack.io/metal-os/stable/firewall/3.0-ubuntu/img.tar.lz4
  features:
    - firewall
- id: ubuntu-24.4
  name: Ubuntu 24.04
  description: Ubuntu 24.04 Latest Release
  url: https://images.metal-stack.io/metal-os/stable/ubuntu/24.04/img.tar.lz4
  features:
    - machine
- id: debian-12.0
  name: Debian 12
  description: Debian 12 Latest Release
  url: https://images.metal-stack.io/metal-os/stable/debian/12/img.tar.lz4
  features:
    - machine

metal_api_sizes:
- id: v1-small-x86
  name: v1-small-x86
  description: The Tiny Virtual
  constraints:
  - type: cores
    min: 1
    max: 4
  - type: memory
    min: "{{ '500MB' | humanfriendly }}"
    max: "{{ '4GB' | humanfriendly }}"
  - type: storage
    min: "{{ '1GB' | humanfriendly }}"
    max: "{{ '100GB' | humanfriendly }}"

metal_api_partitions:
  - id: mini-lab
    name: mini-lab
    description: The mini-lab example partition
    bootconfig:
      kernelurl: "{{ metal_kernel_url }}"
      imageurl: "{{ metal_hammer_image_url }}"
      commandline: console=ttyS0,115200n8 ip=dhcp carrier_timeout=10
    privatenetworkprefixlength: 22

metal_api_networks:
- id: tenant-super-network-mini-lab
  name: "Project Super Network"
  description: "Super network of all project networks"
  nat: false
  privatesuper: true
  underlay: false
  destinationprefixes: []
  partitionid: mini-lab
  defaultchildprefixlength:
    IPv4: 22
    IPv6: 96
  prefixes:
  - 10.0.0.0/16
  - 2001:db8:0:10::/64
  additionalAnnouncableCIDRs:
  - 10.240.0.0/12
- id: internet-mini-lab
  name: "Virtual Internet Network"
  description: "Virtual Internet Network for mini-lab"
  nat: true
  privatesuper: false
  underlay: false
  destinationprefixes:
    - 0.0.0.0/0
    - ::/0
  partitionid: "mini-lab"
  vrf: 104009
  prefixes:
  - 203.0.113.128/25
  - 2001:db8:0:113::/64
  labels:
    network.metal-stack.io/default: ""
    network.metal-stack.io/default-external: ""
- id: underlay-mini-lab
  name: "Underlay Network"
  description: "Underlay Network for mini-lab"
  nat: false
  privatesuper: false
  underlay: true
  destinationprefixes: []
  partitionid: "mini-lab"
  prefixes:
  - 10.1.0.0/24

metal_api_ips:
- name: "reserve v4"
  description: "Reserve IPv4 (for testing purposes)"
  networkid: internet-mini-lab
  projectid: 00000000-0000-0000-0000-000000000000
  ipaddress: "203.0.113.142"
- name: "reserve v6"
  description: "Reserve IPv6 (for testing purposes)"
  networkid: internet-mini-lab
  projectid: 00000000-0000-0000-0000-000000000000
  ipaddress: "2001:db8:0:113::142"

metal_masterdata_api_tls_ca: "{{ lookup('file', 'certs/ca.pem') }}"
metal_masterdata_api_tls_cert: "{{ lookup('file', 'certs/masterdata-api/server.pem') }}"
metal_masterdata_api_tls_cert_key: "{{ lookup('file', 'certs/masterdata-api/server-key.pem') }}"
metal_masterdata_api_tls_client_cert: "{{ lookup('file', 'certs/masterdata-api/client.pem') }}"
metal_masterdata_api_tls_client_key: "{{ lookup('file', 'certs/masterdata-api/client-key.pem') }}"

# for metal-api development with kube-fwd
metal_masterdata_api_port: 8445

metal_masterdata_api_tenants:
- meta:
    id: metal-stack
    kind: Tenant
    apiversion: v1
    version: 0
  name: metal-stack
  iam_config:
  description: metal-stack tenant, which is provider

metal_masterdata_api_projects:
- meta:
    id: 00000000-0000-0000-0000-000000000001
    kind: Project
    apiversion: v1
    version: 0
  name: sample-project
  description: Sample project with static id

metal_console_enabled: false

metal_api_grpc_certs_server_key: "{{ lookup('file', 'certs/grpc/server-key.pem') }}"
metal_api_grpc_certs_server_cert: "{{  lookup('file', 'certs/grpc/server.pem') }}"
metal_api_grpc_certs_client_key: "{{ lookup('file', 'certs/grpc/client-key.pem') }}"
metal_api_grpc_certs_client_cert: "{{  lookup('file', 'certs/grpc/client.pem') }}"
metal_api_grpc_certs_ca_cert: "{{ lookup('file', 'certs/ca.pem') }}"

# auditing
metal_auditing_timescaledb_enabled: true
metal_auditing_meili_enabled: false
